
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: sshroles.vault.vault-go.ibm.com
spec:
  group: vault.vault-go.ibm.com
  names:
    kind: SSHRole
    listKind: SSHRoleList
    plural: sshroles
    singular: sshrole
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: SSHRole is the Schema for the sshroles API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: SSHRoleSpec defines the desired state of SSHRole
          properties:
            parameters:
              description: SSHRoleParameters define the params to submit
              properties:
                adminUser:
                  description: 'AdminUser admin_user (string: "") – Specifies the
                    admin user at remote host. The shared key being registered should
                    be for this user and should have root or sudo privileges. Every
                    time a dynamic credential is generated for a client, Vault uses
                    this admin username to login to remote host and install the generated
                    credential. This is required for Dynamic Key type.'
                  type: string
                algorithmSigner:
                  description: 'AlgorithmSigner algorithm_signer (string: "ssh-rsa")
                    - Algorithm to sign keys with. Valid values are ssh-rsa, rsa-sha2-256,
                    and rsa-sha2-512. Note that ssh-rsa is now considered insecure
                    and is not supported by current OpenSSH versions. Defaults to
                    ssh-rsa for backwards compatibility.'
                  type: string
                allowBareDomains:
                  description: 'AllowBareDomains allow_bare_domains (bool: false)
                    – Specifies if host certificates that are requested are allowed
                    to use the base domains listed in allowed_domains, e.g. "example.com".
                    This is a separate option as in some cases this can be considered
                    a security threat.'
                  type: boolean
                allowHostCertificates:
                  description: 'AllowHostCertificates allow_host_certificates (bool:
                    false) – Specifies if certificates are allowed to be signed for
                    use as a ''host''.'
                  type: boolean
                allowSubdomains:
                  description: 'AllowSubdomains allow_subdomains (bool: false) – Specifies
                    if host certificates that are requested are allowed to be subdomains
                    of those listed in allowed_domains, e.g. if "example.com" is part
                    of allowed_domains, this allows "foo.example.com".'
                  type: boolean
                allowUserCertificates:
                  description: 'AllowUserCertificates allow_user_certificates (bool:
                    false) – Specifies if certificates are allowed to be signed for
                    use as a ''user''.'
                  type: boolean
                allowedCriticalOptions:
                  description: 'AllowedCriticalOptions allowed_critical_options (string:
                    "") – Specifies a comma-separated list of critical options that
                    certificates can have when signed. To allow any critical options,
                    set this to an empty string. Will default to allowing any critical
                    options.'
                  type: string
                allowedDomains:
                  description: 'AllowedDomains allowed_domains (string: "") – The
                    list of domains for which a client can request a host certificate.
                    If this option is explicitly set to "*", then credentials can
                    be created for any domain. See also allow_bare_domains and allow_subdomains.'
                  type: string
                allowedExtensions:
                  description: 'AllowedExtensions allowed_extensions (string: "")
                    – Specifies a comma-separated list of extensions that certificates
                    can have when signed. To allow any extensions, set this to an
                    empty string. Will default to allowing any extensions. For the
                    list of extensions, take a look at the sshd manual''s AUTHORIZED_KEYS
                    FILE FORMAT section. You should add a permit- before the name
                    of extension to allow it.'
                  type: string
                allowedUserKey:
                  additionalProperties:
                    type: integer
                  description: 'AllowedUserKey allowed_user_key_lengths (map<string|int>:
                    "") – Specifies a map of ssh key types and their expected sizes
                    which are allowed to be signed by the CA type.'
                  type: object
                allowedUsers:
                  description: 'AllowedUsers allowed_users (string: "") – If this
                    option is not specified, or if it is *, the client can request
                    a credential for any valid user at the remote host, including
                    the admin user. If only certain usernames are to be allowed, then
                    this list enforces it. If this field is set, then credentials
                    can only be created for default_user and usernames present in
                    this list. Setting this option will enable all the users with
                    access this role to fetch credentials for all other usernames
                    in this list. Use with caution. N.B.: if the type is ca, an empty
                    list does not allow any user; instead you must use * to enable
                    this behavior.'
                  type: string
                allowedUsersTemplate:
                  description: 'AllowedUsersTemplate allowed_users_template (bool:
                    false) - If set, allowed_users can be specified using identity
                    template policies. Non-templated users are also permitted.'
                  type: boolean
                cidrList:
                  description: 'CIDRListcidr_list (string: "") – Specifies a comma
                    separated list of CIDR blocks for which the role is applicable
                    for. It is possible that a same set of CIDR blocks are part of
                    multiple roles. This is a required parameter, unless the role
                    is registered under the /config/zeroaddress endpoint.'
                  type: string
                defaultCriticalOptions:
                  additionalProperties:
                    type: string
                  description: 'DefaultCriticalOptions default_critical_options (map<string|string>:
                    "") – Specifies a map of critical options certificates should
                    have if none are provided when signing. This field takes in key
                    value pairs in JSON format. Note that these are not restricted
                    by allowed_critical_options. Defaults to none.'
                  type: object
                defaultExtensions:
                  additionalProperties:
                    type: string
                  description: 'DefaultExtensions default_extensions (map<string|string>:
                    "") – Specifies a map of extensions certificates should have if
                    none are provided when signing. This field takes in key value
                    pairs in JSON format. Note that these are not restricted by allowed_extensions.
                    Defaults to none.'
                  type: object
                defaultUser:
                  description: For the CA type, if you wish this to be a valid principal,
                    it must also be in allowed_users.
                  type: string
                excludeCIDRList:
                  description: 'ExcludeCIDRList exclude_cidr_list (string: "") – Specifies
                    a comma-separated list of CIDR blocks. IP addresses belonging
                    to these blocks are not accepted by the role. This is particularly
                    useful when big CIDR blocks are being used by the role and certain
                    parts need to be kept out.'
                  type: string
                installScript:
                  description: 'install_script (string: "") – Specifies the script
                    used to install and uninstall public keys in the target machine.
                    Defaults to the built-in script.'
                  type: string
                key:
                  description: 'Key (string: "") – Specifies the name of the registered
                    key in Vault. Before creating the role, use the keys/ endpoint
                    to create a named key. This is required for "Dynamic Key" type.'
                  type: string
                keyBits:
                  description: 'KeyBits key_bits (int: 1024) – Specifies the length
                    of the RSA dynamic key in bits. This can be either 1024 or 2048.'
                  type: integer
                keyIDFormat:
                  description: 'KeyIDFormat key_id_format (string: "" KeyIDFormat)
                    – When supplied,  KeyIDFormatthis value specifies KeyIDFormat
                    a custom format for the key id of a signed certificate. The following
                    variables are available for use: ''{{token_display_name}}'' -
                    The display name of the token used to make the request. ''{{role_name}}''
                    - The name of the role signing the request. ''{{public_key_hash}}''
                    - A SHA256 checksum of the public key that is being signed. e.g.
                    "custom-keyid-{{token_display_name}}"'
                  type: string
                keyOptionSpecs:
                  description: 'KeyOptionSpecs key_option_specs (string: "") – Specifies
                    a comma separated option specification which will be prefixed
                    to RSA keys in the remote host''s authorized_keys file. N.B.:
                    Vault does not check this string for validity.'
                  type: string
                keyType:
                  description: 'KeyType key_type (string: <required>) – Specifies
                    the type of credentials generated by this role. This can be either
                    otp, dynamic or ca.'
                  type: string
                maxTTL:
                  description: 'MaxTTL max_ttl (string: "") – Specifies the maximum
                    Time To Live provided as a string duration with time suffix. Hour
                    is the largest suffix. If not set, defaults to the system maximum
                    lease TTL.'
                  type: string
                port:
                  description: 'Port port (int: 22) – Specifies the port number for
                    SSH connection. Port number does not play any role in OTP generation.
                    For the otp secrets engine type, this is just a way to inform
                    the client about the port number to use. The port number will
                    be returned to the client by Vault along with the OTP.'
                  type: integer
                tokenDisplayName:
                  description: 'TokenDisplayName allow_user_key_ids (bool: false)
                    – Specifies if users can override the key ID for a signed certificate
                    with the "key_id" field. When false, the key ID will always be
                    the token display name. The key ID is logged by the SSH server
                    and can be useful for auditing.'
                  type: boolean
                ttl:
                  description: 'TTL ttl (string: "") – Specifies the Time To Live
                    value provided as a string duration with time suffix. Hour is
                    the largest suffix. If not set, uses the system default value
                    or the value of max_ttl, whichever is shorter.'
                  type: string
              required:
              - adminUser
              - algorithmSigner
              - allowBareDomains
              - allowHostCertificates
              - allowSubdomains
              - allowUserCertificates
              - allowedCriticalOptions
              - allowedDomains
              - allowedExtensions
              - allowedUserKey
              - allowedUsers
              - allowedUsersTemplate
              - cidrList
              - defaultCriticalOptions
              - defaultExtensions
              - defaultUser
              - excludeCIDRList
              - installScript
              - key
              - keyBits
              - keyIDFormat
              - keyOptionSpecs
              - keyType
              - maxTTL
              - port
              - tokenDisplayName
              - ttl
              type: object
            roleName:
              type: string
            signerPath:
              type: string
            vaultNamespace:
              type: string
          required:
          - parameters
          - roleName
          - signerPath
          - vaultNamespace
          type: object
        status:
          description: SSHRoleStatus defines the observed state of SSHRole
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
