
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: vaultauths.vault.vault-go.ibm.com
spec:
  group: vault.vault-go.ibm.com
  names:
    kind: VaultAuth
    listKind: VaultAuthList
    plural: vaultauths
    singular: vaultauth
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: VaultAuth is the Schema for the vaultauths API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: VaultAuthSpec spec for auth '{"type":"approle","description":"","config":{"options":null,"default_lease_ttl":"0s","max_lease_ttl":"0s","force_no_cache":false},"local":false,"seal_wrap":false,"options":null}'
            http://127.0.0.1:8200/v1/sys/auth/foo
          properties:
            data:
              description: AuthData is a struct for passing data to vault rest calls
              properties:
                config:
                  description: AuthConfig for setting TTL
                  properties:
                    defaultLeaseTTL:
                      format: int64
                      type: integer
                    maxLeaseTTL:
                      format: int64
                      type: integer
                  type: object
                description:
                  type: string
                type:
                  type: string
              required:
              - config
              - description
              - type
              type: object
            jwtConfig:
              description: JWTAuthConfig is config for JWT
              properties:
                JWKSCAPem:
                  description: 'JWKSCAPem jwks_ca_pem (string: <optional>) - The CA
                    certificate or chain of certificates, in PEM format, to use to
                    validate connections to the JWKS URL. If not set, system certificates
                    are used.'
                  type: string
                JWKSURL:
                  description: 'JWKSURL jwks_url (string: <optional>) - JWKS URL to
                    use to authenticate signatures. Cannot be used with "oidc_discovery_url"
                    or "jwt_validation_pubkeys".'
                  type: string
                boundIssuer:
                  description: 'BoundIssuer bound_issuer (string: <optional>) - The
                    value against which to match the iss claim in a JWT.'
                  type: string
                defaultRole:
                  description: 'DefaultRole default_role (string: <optional>) - The
                    default role to use if none is provided during login.'
                  type: string
                jwtSupportedAlgs:
                  description: 'JWTSupportedAlgs jwt_supported_algs (comma-separated
                    string, or array of strings: <optional>) - A list of supported
                    signing algorithms. Defaults to [RS256]. (Available algorithms
                    + EdDSA)'
                  type: string
                jwtValidationPubkeys:
                  description: 'JWTValidationPubkeys jwt_validation_pubkeys (comma-separated
                    string, or array of strings: <optional>) - A list of PEM-encoded
                    public keys to use to authenticate signatures locally. Cannot
                    be used with "jwks_url" or "oidc_discovery_url".'
                  type: string
                oidcClientID:
                  description: 'OIDCClientID oidc_client_id (string: <optional>) -
                    The OAuth Client ID from the provider for OIDC roles.'
                  type: string
                oidcClientSecret:
                  description: 'OIDCClientSecret oidc_client_secret (string: <optional>)
                    - The OAuth Client Secret from the provider for OIDC roles.'
                  type: string
                oidcDiscoveryCAPem:
                  description: 'OIDCDiscoveryCAPem oidc_discovery_ca_pem (string:
                    <optional>) - The CA certificate or chain of certificates, in
                    PEM format, to use to validate connections to the OIDC Discovery
                    URL. If not set, system certificates are used.'
                  type: string
                oidcDiscoveryURL:
                  description: 'OIDCDiscoveryURL oidc_discovery_url (string: <optional>)
                    - The OIDC Discovery URL, without any .well-known component (base
                    path). Cannot be used with "jwks_url" or "jwt_validation_pubkeys".'
                  type: string
                oidcResponseMode:
                  description: 'OIDCResponseMode oidc_response_mode (string: <optional>)
                    - The response mode to be used in the OAuth2 request. Allowed
                    values are "query" and "form_post". Defaults to "query".'
                  type: string
                oidcResponseTypes:
                  description: 'OIDCResponseTypes oidc_response_types (comma-separated
                    string, or array of strings: <optional>) - The response types
                    to request. Allowed values are "code" and "id_token". Defaults
                    to "code". Note: "id_token" may only be used if "oidc_response_mode"
                    is set to "form_post".'
                  type: string
                providerConfig:
                  additionalProperties:
                    type: string
                  description: 'ProviderConfig provider_config (map: <optional>) -
                    Configuration options for provider-specific handling. Providers
                    with specific handling include Azure; the options are described
                    in each provider''s section in OIDC Provider Setup'
                  type: object
              type: object
            path:
              type: string
            vaultNamespace:
              type: string
          type: object
        status:
          description: VaultAuthStatus defines the observed state of VaultAuth
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
